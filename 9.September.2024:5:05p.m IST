Sort 0s, 1s and 2s
Difficulty: EasyAccuracy: 50.58%Submissions: 686K+Points: 2
Given an array arr containing only 0s, 1s, and 2s. Sort the array in ascending order.

Examples:

Input: arr[]= [0, 2, 1, 2, 0]
Output: 0 0 1 2 2
Explanation: 0s 1s and 2s are segregated into ascending order.
Input: arr[] = [0, 1, 0]
Output: 0 0 1
Explanation: 0s 1s and 2s are segregated into ascending order.
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
1 <= arr.size() <= 106
0 <= arr[i] <= 2


 void sort012(vector<int>& arr) {
        int l = 0;
        int r = arr.size()-1;
        int ite = 0;
        while(ite<=r) {
            if (arr[ite] == 0) {
                arr[ite] = arr[l];
                arr[l] = 0;
                l++;
                ite++;
                
                
            }
            else if (arr[ite] ==2) {
                arr[ite] = arr[r];
                arr[r] = 2;
                r--;
            }
            else ite++;
        }
      
    }
